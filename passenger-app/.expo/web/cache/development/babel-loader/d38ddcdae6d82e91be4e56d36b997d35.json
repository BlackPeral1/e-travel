{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport { Colors } from \"react-native/Libraries/NewAppScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasPermission = _useState2[0],\n    setHasPermission = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scanned = _useState4[0],\n    setScanned = _useState4[1];\n  var _useState5 = useState(\"Not yet scanned\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    text = _useState6[0],\n    setText = _useState6[1];\n  var askForCameraPermission = function askForCameraPermission() {\n    _asyncToGenerator(function* () {\n      var _yield$BarCodeScanner = yield BarCodeScanner.requestPermissionsAsync(),\n        status = _yield$BarCodeScanner.status;\n      setHasPermission(status == \"granted\");\n    })();\n  };\n  useEffect(function () {\n  }, []);\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref2) {\n    var type = _ref2.type,\n      data = _ref2.data;\n    setScanned(true);\n    setText(data);\n    console.log(\"Type : \" + type + \"\\nData\" + data);\n  };\n  if (hasPermission === null) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(Text, {\n        children: \"Requesting for camera permission\"\n      })\n    });\n  }\n  if (hasPermission === false) {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: {\n          margin: 10\n        },\n        children: \"No access to camera\"\n      }), _jsx(Button, {\n        title: \"Allow Camera\",\n        onPress: function onPress() {\n          return askForCameraPermission();\n        }\n      })]\n    });\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.barcodebox,\n      children: [_jsx(BarCodeScanner, {\n        onBarCodeScanned: scanned ? undefined : handleBarCodeScanned\n      }), _jsx(Text, {\n        style: styles.maintext,\n        children: text\n      }), scanned && _jsx(Button, {\n        title: \"Scan again? \",\n        onPress: function onPress() {\n          return setScanned(false);\n        },\n        color: \"tomato\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  barcodebox: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 300,\n    width: 300,\n    overflow: \"hidden\",\n    borderRadius: 30,\n    backgroundColor: \"tomato\"\n  },\n  maintext: {\n    fontSize: 16,\n    margin: 30\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","useEffect","BarCodeScanner","Colors","App","hasPermission","setHasPermission","scanned","setScanned","text","setText","askForCameraPermission","requestPermissionsAsync","status","handleBarCodeScanned","type","data","console","log","styles","container","margin","barcodebox","undefined","maintext","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","height","width","overflow","borderRadius","fontSize"],"sources":["E:/e-travel/passenger-app/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View, Button } from \"react-native\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport { Colors } from \"react-native/Libraries/NewAppScreen\";\n\nexport default function App() {\n  const [hasPermission, setHasPermission] = useState(null);\n  const [scanned, setScanned] = useState(false);\n  const [text, setText] = useState(\"Not yet scanned\");\n\n  const askForCameraPermission = () => {\n    (async () => {\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\n      setHasPermission(status == \"granted\");\n    })();\n  };\n  //Request Camera permission\n  useEffect(() => {\n   // askForCameraPermission();\n  }, []);\n  //What happens when we scan the bar code\n  const handleBarCodeScanned = ({ type, data }) => {\n    setScanned(true);\n    setText(data);\n    console.log(\"Type : \" + type + \"\\nData\" + data);\n  };\n  //Check permission and return the screens\n  if (hasPermission === null) {\n    return (\n      <View style={styles.container}>\n        <Text>Requesting for camera permission</Text>\n      </View>\n    );\n  }\n  if (hasPermission === false) {\n    return (\n      <View style={styles.container}>\n        <Text style={{ margin: 10 }}>No access to camera</Text>\n        <Button\n          title={\"Allow Camera\"}\n          onPress={() => askForCameraPermission()}\n        ></Button>\n      </View>\n    );\n  }\n  //Return the View\n  return (\n    <View style={styles.container}>\n      <View style={styles.barcodebox}>\n        <BarCodeScanner\n          onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\n        ></BarCodeScanner>\n        <Text style={styles.maintext}>{text}</Text>\n        {scanned && (\n          <Button\n            title={\"Scan again? \"}\n            onPress={() => setScanned(false)}\n            color=\"tomato\"\n          />\n        )}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  barcodebox: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 300,\n    width: 300,\n    overflow: \"hidden\",\n    borderRadius: 30,\n    backgroundColor: \"tomato\",\n  },\n  maintext: {\n    fontSize: 16,\n    margin: 30,\n  },\n});\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAEnD,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,MAAM,QAAQ,qCAAqC;AAAC;AAAA;AAE7D,eAAe,SAASC,GAAG,GAAG;EAC5B,gBAA0CJ,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAjDK,aAAa;IAAEC,gBAAgB;EACtC,iBAA8BN,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtCO,OAAO;IAAEC,UAAU;EAC1B,iBAAwBR,QAAQ,CAAC,iBAAiB,CAAC;IAAA;IAA5CS,IAAI;IAAEC,OAAO;EAEpB,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsB,GAAS;IACnC,kBAAC,aAAY;MACX,kCAAyBT,cAAc,CAACU,uBAAuB,EAAE;QAAzDC,MAAM,yBAANA,MAAM;MACdP,gBAAgB,CAACO,MAAM,IAAI,SAAS,CAAC;IACvC,CAAC,GAAG;EACN,CAAC;EAEDZ,SAAS,CAAC,YAAM;EAEhB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMa,oBAAoB,GAAG,SAAvBA,oBAAoB,QAAuB;IAAA,IAAjBC,IAAI,SAAJA,IAAI;MAAEC,IAAI,SAAJA,IAAI;IACxCR,UAAU,CAAC,IAAI,CAAC;IAChBE,OAAO,CAACM,IAAI,CAAC;IACbC,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGH,IAAI,GAAG,QAAQ,GAAGC,IAAI,CAAC;EACjD,CAAC;EAED,IAAIX,aAAa,KAAK,IAAI,EAAE;IAC1B,OACE,KAAC,IAAI;MAAC,KAAK,EAAEc,MAAM,CAACC,SAAU;MAAA,UAC5B,KAAC,IAAI;QAAA;MAAA;IAAwC,EACxC;EAEX;EACA,IAAIf,aAAa,KAAK,KAAK,EAAE;IAC3B,OACE,MAAC,IAAI;MAAC,KAAK,EAAEc,MAAM,CAACC,SAAU;MAAA,WAC5B,KAAC,IAAI;QAAC,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAG,CAAE;QAAA;MAAA,EAA2B,EACvD,KAAC,MAAM;QACL,KAAK,EAAE,cAAe;QACtB,OAAO,EAAE;UAAA,OAAMV,sBAAsB,EAAE;QAAA;MAAC,EAChC;IAAA,EACL;EAEX;EAEA,OACE,KAAC,IAAI;IAAC,KAAK,EAAEQ,MAAM,CAACC,SAAU;IAAA,UAC5B,MAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACG,UAAW;MAAA,WAC7B,KAAC,cAAc;QACb,gBAAgB,EAAEf,OAAO,GAAGgB,SAAS,GAAGT;MAAqB,EAC7C,EAClB,KAAC,IAAI;QAAC,KAAK,EAAEK,MAAM,CAACK,QAAS;QAAA,UAAEf;MAAI,EAAQ,EAC1CF,OAAO,IACN,KAAC,MAAM;QACL,KAAK,EAAE,cAAe;QACtB,OAAO,EAAE;UAAA,OAAMC,UAAU,CAAC,KAAK,CAAC;QAAA,CAAC;QACjC,KAAK,EAAC;MAAQ,EAEjB;IAAA;EACI,EACF;AAEX;AAEA,IAAMW,MAAM,GAAGM,UAAU,CAACC,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDR,UAAU,EAAE;IACVO,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,MAAM,EAAE,GAAG;IACXC,KAAK,EAAE,GAAG;IACVC,QAAQ,EAAE,QAAQ;IAClBC,YAAY,EAAE,EAAE;IAChBN,eAAe,EAAE;EACnB,CAAC;EACDJ,QAAQ,EAAE;IACRW,QAAQ,EAAE,EAAE;IACZd,MAAM,EAAE;EACV;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}